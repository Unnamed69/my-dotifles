c
clear
ll
ls
ls -la
c
clear
exit
eza
eza | table
eza -la 
eza -la | detech column
eza -la | detect column
eza -la | detect columns
exit
yazi
ps
ps | where name like hyprpanel
ps | where name like sww
ps | where name like sww | get pid | kill -i
ps | where name like sww | get pid | kill -9
ps | where name like sww | get pid | kill 
ps | where name like sww | get pid
kill 1731
nohup hyprpanel &
cd
exit
ps 
clear
cd
which cd
c
cd
clear
yay -Rns agsv1
c
clear
ags -h
ags list
ags quit hyprpanel
ags quit -i hyprpanel
nohup hyprpanel &
ags quit -i hyprpanel
ags list
exit
mkdir ($nu.data-dir | path join "vendor/autoload")
echo $nu.data-dir
starship init nu | save -f ($nu.data-dir | path join "vendor/autoload/starship.nu")
cd .local/share/nushell/
ls -la
cd vendor/autoload
ls -la
nvim starship.nu
cd ~/.config/nushell
source config.nu
clear
exit
c
starship preset pastel-powerline -o ~/.config/starship.toml
cd Hyprpanel
cd HyprPanel/
clear
cd
starship preset jetpack -o ~/.config/starship.toml
cd HyprPanel/
starship preset pastel-powerline -o ~/.config/starship.toml
$nu.env-path
cd $nu.env-path
nvim $nu.env-path
nvim $nu.config-path
exit
clear
cd
cd Programing/easier-be/
cd
cd easier
z easier
z
zoxide init --cmd cd
zoxide init --cmd cd nu
zoxide init --cmd cd nushell
c
cd easier
exit
cd easier
z easier
cd
zoxide init --cmd cd nushell
source ~/.zoxide.nu
cd easier
nvim $nu.env-path
exit
cd easier
cd
yay -S carapace-bin
$nu.env-path
nvim $nu.env-path
mkdir ~/.cache/carapace
carapace _carapace nushell | save --force ~/.cache/carapace/init.nu
$nu.config-path
nvim $nu.config-path
exit
clear
docker container ls 
docker container ls | detect columns
docker container ls | detect columns | get command
$env.EDITOR
nvim $nu.env-path
source $nu.env-path
source $nu.config-path
nu config
config nu
alias ll = ls -la
ll
c
alias c = clear
c
exit
ll
config nu
lll
ll
ls -l
ls -la
c
exit
clear
config nu
source $nu.config-path
config nu
source $nu.config-path
docker ps -qa
docker rm $(docker ps -qa)
ls -h
aws -h
aws 
aws config
k -h
kubectl -h
clear
config nu
c
source $nu.config-path
which vim 
which vim | empty?
which vim | empty
empty
which vim | is-empty
config nu
source $nu.config-path
which vim | is-empty | not
which vim | is-empty
config nu
source $nu.config-path
config nu
source $nu.config-path
ls -A
config nu
source $nu.config-path
nu config
config nu
source $nu.config-path
config nu
source $nu.config-path
config nu
source $nu.config-path
c
ll
oll
c
ll
c
top
c
btop
ps
ps -aux
c
yadm status
yadm add .config/nushell 
yadm commit -m "added nushell config"
yadm push
c
help commands | explore
yazi
$env.config | table -e | bat -p
$env.config
$env.config | table -e
$env.config | bat -p
config nu --doc | nu-highlight | bat
c
config nu
source $nu.config-path
nupm
cd .config/nushell/
git clone https://github.com/nushell/nupm.git
cd nupm/
vi README.md
ll
cd ..
cd nupm/
nupm install --force --path
nupm install --force --path .
use nupm/
nupm install --force --path .
cd ..
vi README.md
config nu
source $nu.config-path
has_command nvim
which vi
which ll
config nu
source $nu.config-path
which vi
config nu
source $nu.config-path
which v
v
config nu
source $nu.config-path
which v
fastfetch
neofetch
config nu
source $nu.config-path
neofetch
which neofetch
neofetch
source $nu.config-path
config nu
source $nu.config-path
neofetch
config nu
source $nu.config-path
neofetch
config nu
source $nu.config-path
neofetch
c
config nu
cp -v
help cp
source $nu.config-path
help cp
help mv
help rm
mkdir test
source $nu.config-path
help cp
cp -v
which cp
source $nu.config-path
help rm
ll
rm test
source $nu.config-path
help cp
exit
help cp
which mv
help mv
help ls
help rm
source $nu.config-path
exit
help cp
source $nu.config-path
exit
help cp
help cp-builtin
cp -h
rm -h
rm test
rm -rf test
rm -rfI test
source $nu.config-path
exit
mkdir test
rm test
source $nu.config-path
c
exit
which curl
which curlie
source $nu.config-path
which curl
curl
which curl
curlie
c
nupm
cd nupm
nupm
use nupm/nupm<\n>nupm install nupm --force --path
use nupm/
nupm install --force --path .
nupm
cd ..
git clone https://github.com/cptpiepmatz/nu-plugin-highlight.git
nupm install --path nu-plugin-highlight/
c
cargo install nu_plugin_highlight
which nu_plugin_highlight
plugin add path/to/the/plugin/binary
which nu_plugin_highlight | plugin add 
which nu_plugin_highlight | plugin add ($in.path)
which nu_plugin_highlight | get path
which nu_plugin_highlight | get path | plugin add
which nu_plugin_highlight | select path
which nu_plugin_highlight | select path | plugin add ($1)
which nu_plugin_highlight | select path | plugin add $in
date now
1..10
which nu_plugin_highlight | select path |first| plugin add $in
which nu_plugin_highlight | select path |first|into string| plugin add $in
which nu_plugin_highlight | select path
which nu_plugin_highlight | select path | do { $in | describe }
1..10 | each {$in * 2}
1..10 | each {|value| $value * 2}
ls | do {|file| $file.name | str upcase}
ls | each {|file| $file.name | str upcase}
which nu_plugin_highlight | select path | plugin add $in
which nu_plugin_highlight | select path | into string
which nu_plugin_highlight | get path | into string
which nu_plugin_highlight | get path
which nu_plugin_highlight | get path | into string
which nu_plugin_highlight | get path | into string | plugin add
which nu_plugin_highlight | get path | into string | plugin add $in
exit
help plugin add
which nu_plugin_highlight | get path | first | describe
which nu_plugin_highlight | get path | first | plugin add $1
which nu_plugin_highlight | get path | first | plugin add $in
plugin use highlight
exit
kjhkjhjkhjk 
help commands | where command_type == "plugin"
c
ifconfig
ifconfig | explore
ifconfig
ifconfig | detect columns
c
ifconfig
netstat
c
wavemon 
sys net
sys cpu 
sys host 
sys temp 
sys
sudo wavemon 
http get https://fake-coffee-api.vercel.app/api
curl -e https://fake-coffee-api.vercel.app/api
which curl
curl https://fake-coffee-api.vercel.app/api
curl -X POST https://fake-coffee-api.vercel.app/api
curl -X GET https://fake-coffee-api.vercel.app/api
curl https://fake-coffee-api.vercel.app/api
config nu
v $nu.env-path
config nu
source $nu.config-path
source $nu.env-path
source $nu.config-path
source $nu.env-path
yay -Qs oh-my-posh
yay -Ss oh-my-posh
yay -S oh-my-posh
c
mkdir ~/.config/oh-my-posh
cd oh-my-posh
cd .config/oh-my-posh/
which oh-my-posh 
cd
cd oh-my-posh
mkdir themes
cd themes/
cd nvim
v .
v powerlevel10k_rainbow.omp.json
v powerlevel10k_rainbow.omp.json 
v $nu.env-path
config nu
exit
cd easier
cd mms
exit
cd mms
exit
cd mms
exit
cd mms
exit
cd mms
exit
cd mms
cd ..
ll
exit
cd mms
exit
cd mms
v powerlevel10k_rainbow.omp.json 
cd ..
yadm status
